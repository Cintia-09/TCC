# Carregar bibliotecas necessárias
library(readxl)
library(sp)
library(gstat)
library(hydroGOF)
library(raster)
library(sf)

# Carregar os dados
BD <- read_excel("BD.xlsx")
head(BD)

# Visualizar a distribuição dos dados de Prof3m
hist(BD$Prof3m, main="Histograma de Prof3m", xlab="Prof3m")
boxplot(BD$Prof3m, main="Boxplot de Prof3m")

# Remover linhas com valores ausentes em Prof3m
BD <- na.omit(BD[, c("x", "y", "Prof3m")])
BD
# Criar objeto espacial
coordinates(BD) <- ~x+y
coordinates(BD)
plot(BD)
spplot(BD["Prof3m"], main = "Prof3m")

# Criação do variograma
variogram_model = variogram(Prof3m ~ 1, BD)
variogram_model 

# Ajustar modelo de variograma
g <- gstat(id="Prof3m", formula = Prof3m ~ x + y, data = BD)
variog <- gstat::variogram(g)
plot(variog, pch=16, cex=1)

# Ajuste do modelo de variograma experimental
fitted_model = fit.variogram(variogram_model, model = vgm(1, "Sph", 1, 1))
fitted_model

# Definir grade de predição
grd = expand.grid(x = seq(min(BD@coords[,1]), max(BD@coords[,1]), by = 0.1),
                  y = seq(min(BD@coords[,2]), max(BD@coords[,2]), by = 0.1))
coordinates(grd) <- ~x + y
plot(grd)

# Krigagem
kriging_result = krige(Prof3m ~ 1, BD, grd, model = fitted_model)
kriging_result

# Adicionar um pequeno valor aleatório para evitar cortes não únicos
kriging_result$var1.pred = kriging_result$var1.pred + 
  runif(length(kriging_result$var1.pred), min = -1e-10, max= 1e-10)

# Visualizar resultado                                                          
spplot(kriging_result["var1.pred"])

# Ajuste de modelos teóricos de variograma
fit_exp <- fit.variogram(variog, vgm(50, "Exp", 2000, 24))
plot(variog, fit_exp, pch=16, cex=1, main = "EXPONENCIAL")
fit_exp

fit_shp <- fit.variogram(variog, vgm(44, "Sph", 2000, 26))
plot(variog, fit_shp, pch=16, cex=1, main = "ESFÉRICO")
fit_shp

fit_gau <- fit.variogram(variog, vgm(1, "Gau", 2000, 31))
plot(variog, fit_gau, pch=16, cex=1, main = "GAUSSIANO")
fit_gau

# Validação cruzada - 10 vezes
# Modelo Exponencial
crossval_exp = krige.cv(Prof3m ~ x + y, locations = BD, model = fit_exp, nfold = 10)
crossval_exp

plot(crossval_exp$var1.pred ~ BD$Prof3m, cex = 1.2, lwd = 2, xlim = c(0,10), ylim = c(0,10))
abline(0, 1, col = "red", lwd = 2)
lm_exp <- lm(crossval_exp$var1.pred ~ BD$Prof3m)
abline(lm_exp, col = "green", lwd = 2)

r2_exp <- summary(lm_exp)$r.squared
rmse_exp <- hydroGOF::rmse(crossval_exp$var1.pred, BD$Prof3m)
print(paste('The R-squared of the exponential model is: ', round(r2_exp, 2)))
print(paste('The RMSE of the exponential model is: ', round(rmse_exp, 2)))

# Modelo Esférico
crossval_shp <- krige.cv(Prof3m ~ x + y, locations = BD, model = fit_shp, nfold = 10)
crossval_shp

plot(crossval_shp$var1.pred ~ BD$Prof3m, cex = 1.2, lwd = 2, xlim = c(2,10), ylim = c(2,10))
abline(0, 1, col = "blue", lwd = 2)

lm_shp <- lm(crossval_shp$var1.pred ~ BD$Prof3m)
abline(lm_shp, col = "violet", lwd = 2)

r2_shp <- summary(lm_shp)$r.squared
rmse_shp <- hydroGOF::rmse(crossval_shp$var1.pred, BD$Prof3m)
print(paste('The R-squared of the Spherical model is: ', round(r2_shp, 2)))
print(paste('The RMSE of the Spherical model is: ', round(rmse_shp, 2)))

# Plot dos resíduos
bubble(crossval_exp, "residual", main = "C% 5-fold CV residuals - Exponential")
bubble(crossval_shp, "residual", main = "C% 5-fold CV residuals - Spherical")

# Kriging
# Convertendo para objeto sf
points_sf <- st_as_sf(BD, coords = c("x", "y"), crs = 27700) %>% 
  cbind(st_coordinates(.))

# Criar uma grade de 5x5m
grd_5m_sf <- points_sf %>% 
  st_bbox() %>% 
  st_as_sfc() %>% 
  st_make_grid(cellsize = c(5, 5), what = "centers") %>%
  st_as_sf() %>%
  cbind(., st_coordinates(.))

# Convertendo para objeto sp
grd_5m_sp <- as(grd_5m_sf, "Spatial")
gridded(grd_5m_sp) <- TRUE           
grid <- as(grd_5m_sp, "SpatialPixels")
colnames(grid@coords) <- c('X', 'Y')
plot(grid)

# Ou carregar a grade de predição do computador
grid <- read.csv("grid_5m.csv", sep = ';')[,2:3]
colnames(grid) <- c("X", "Y")
coordinates(grid) <- ~X + Y
plot(grid)

# Krigagem Exponencial
predicted_exp <- krige(formula = Prof3m ~ x + y, locations = BD, newdata = grid, model = fit_exp)
plot(predicted_exp)

# Krigagem Esférica
predicted_shp <- krige(formula = Prof3m ~ x + y, locations = BD, newdata = grid, model = fit_shp)
plot(predicted_shp)

# Plot dos mapas
par(mfrow = c(1, 2))
predicted_raster_exp <- raster(predicted_exp)
plot(predicted_raster_exp, main = 'Kriging - Exponential')

predicted_raster_shp <- raster(predicted_shp)
plot(predicted_raster_shp, main = 'Kriging - Spherical')

# Exportar raster
writeRaster(predicted_raster_shp, 'predicted_2016.tif', overwrite = TRUE)
